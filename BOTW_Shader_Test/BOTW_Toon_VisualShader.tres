[gd_resource type="VisualShader" load_steps=42 format=2]

[sub_resource type="VisualShaderNodeVec3Uniform" id=1]
uniform_name = "light_direction"

[sub_resource type="VisualShaderNodeColorUniform" id=2]
uniform_name = "light_color"

[sub_resource type="VisualShaderNodeDotProduct" id=3]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=4]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "shadow_size"

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "shadow_blend"

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
output_port_for_preview = 0
function = 31

[sub_resource type="VisualShaderNodeVectorOp" id=8]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=9]
uniform_name = "main_texture"

[sub_resource type="VisualShaderNodeScalarConstant" id=10]
constant = 1.4

[sub_resource type="VisualShaderNodeVectorOp" id=11]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=13]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=14]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeFresnel" id=15]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=16]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=17]

[sub_resource type="VisualShaderNodeTexture" id=18]
output_port_for_preview = 0
source = 5

[sub_resource type="VisualShaderNodeScalarUniform" id=19]
uniform_name = "rimlight_size"

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "rimlight_blend"

[sub_resource type="VisualShaderNodeVectorOp" id=21]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=22]
uniform_name = "rimlight_color"

[sub_resource type="VisualShaderNodeCustom" id=23]
output_port_for_preview = 0
initialized = true

[sub_resource type="VisualShaderNodeScalarOp" id=24]

[sub_resource type="VisualShaderNodeColorUniform" id=25]
uniform_name = "shadow_color"

[sub_resource type="VisualShaderNodeInput" id=26]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorInterp" id=27]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorUniform" id=28]
uniform_name = "mix_weight"

[sub_resource type="VisualShaderNodeVectorOp" id=29]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=30]
output_port_for_preview = 0
source = 5

[sub_resource type="VisualShaderNodeTextureUniform" id=31]
uniform_name = "normal_map"

[sub_resource type="VisualShaderNodeTexture" id=32]
output_port_for_preview = 0
source = 5

[sub_resource type="VisualShaderNodeVectorFunc" id=33]
function = 25

[sub_resource type="VisualShaderNodeScalarUniform" id=34]
uniform_name = "metallic"

[sub_resource type="VisualShaderNodeScalarUniform" id=35]
uniform_name = "roughness"

[sub_resource type="VisualShaderNodeVectorOp" id=36]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=37]
uniform_name = "tint"

[sub_resource type="VisualShaderNodeVectorOp" id=38]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeGlobalExpression" id=39]
size = Vector2( 250, 150 )
expression = "varying vec3 normal;"

[sub_resource type="VisualShaderNodeExpression" id=40]
size = Vector2( 250, 150 )
expression = "normal = input0;"

[sub_resource type="VisualShaderNodeInput" id=41]
input_name = "normal"

[resource]
code = "shader_type spatial;
render_mode diffuse_toon, specular_toon;

uniform vec4 tint : hint_color;
uniform sampler2D main_texture;
uniform vec4 light_color : hint_color;
uniform float shadow_size;
uniform float shadow_blend;
uniform vec3 light_direction;
uniform vec4 shadow_color : hint_color;
uniform vec4 rimlight_color : hint_color;
uniform float rimlight_blend;
uniform float rimlight_size;
uniform float metallic;
uniform float roughness;


// GlobalExpression:0
	varying vec3 normal;

void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:8
	vec3 n_out8p0 = tint.rgb;
	float n_out8p1 = tint.a;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 main_texture_tex_read = texture(main_texture, n_out4p0.xy);
		n_out3p0 = main_texture_tex_read.rgb;
		n_out3p1 = main_texture_tex_read.a;
	}

// VectorOp:7
	vec3 n_out7p0 = n_out8p0 * n_out3p0;

// ColorUniform:11
	vec3 n_out11p0 = light_color.rgb;
	float n_out11p1 = light_color.a;

// ScalarUniform:15
	float n_out15p0 = shadow_size;

// ScalarUniform:16
	float n_out16p0 = shadow_blend;

// ScalarOp:38
	float n_out38p0 = n_out15p0 + n_out16p0;

// VectorUniform:10
	vec3 n_out10p0 = light_direction;

// VectorFunc:47
	vec3 n_in47p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out47p0 = round(n_in47p0);

// DotProduct:13
	float n_out13p0 = dot(n_out10p0, n_out47p0);

// ScalarSmoothStep:14
	float n_out14p0 = smoothstep(n_out15p0, n_out38p0, n_out13p0);

// VectorOp:18
	vec3 n_out18p0 = n_out11p0 * vec3(n_out14p0);

// ScalarFunc:17
	float n_out17p0 = 1.0 - n_out14p0;

// Scalar:22
	float n_out22p0 = 1.400000;

// ColorUniform:39
	vec3 n_out39p0 = shadow_color.rgb;
	float n_out39p1 = shadow_color.a;

// VectorOp:24
	vec3 n_out24p0 = vec3(n_out22p0) * n_out39p0;

// VectorOp:25
	vec3 n_out25p0 = vec3(n_out17p0) * n_out24p0;

// VectorOp:23
	vec3 n_out23p0 = n_out18p0 + n_out25p0;

// ColorUniform:33
	vec3 n_out33p0 = rimlight_color.rgb;
	float n_out33p1 = rimlight_color.a;

// ScalarUniform:31
	float n_out31p0 = rimlight_blend;

// ScalarUniform:30
	float n_out30p0 = rimlight_size;

// ScalarOp:29
	float n_out29p0 = n_out30p0 + n_out31p0;

// Fresnel:27
	float n_in27p3 = 1.00000;
	float n_out27p0 = pow(1.0 - clamp(dot(NORMAL, VIEW), 0.0, 1.0), n_in27p3);

// ScalarSmoothStep:28
	float n_out28p0 = smoothstep(n_out31p0, n_out29p0, n_out27p0);

// VectorOp:32
	vec3 n_out32p0 = n_out33p0 * vec3(n_out28p0);

// VectorOp:26
	vec3 n_out26p0 = n_out23p0 + n_out32p0;

// VectorOp:9
	vec3 n_out9p0 = n_out7p0 * n_out26p0;

// Texture:44
	vec3 n_out44p0;
	float n_out44p1;
	{
		vec4 main_texture_tex_read = texture(main_texture, UV.xy);
		n_out44p0 = main_texture_tex_read.rgb;
		n_out44p1 = main_texture_tex_read.a;
	}

// VectorOp:42
	vec3 n_out42p0 = n_out9p0 * n_out44p0;

// ScalarUniform:48
	float n_out48p0 = metallic;

// ScalarUniform:49
	float n_out49p0 = roughness;

// Output:0
	ALBEDO = n_out42p0;
	METALLIC = n_out48p0;
	ROUGHNESS = n_out49p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -134.557, 964.765 )
modes/diffuse = 4
modes/specular = 3
nodes/vertex/2/node = SubResource( 39 )
nodes/vertex/2/position = Vector2( -449, 85 )
nodes/vertex/2/size = Vector2( 250, 150 )
nodes/vertex/2/input_ports = ""
nodes/vertex/2/output_ports = ""
nodes/vertex/2/expression = "varying vec3 normal;"
nodes/vertex/3/node = SubResource( 40 )
nodes/vertex/3/position = Vector2( -300, 300 )
nodes/vertex/3/size = Vector2( 250, 150 )
nodes/vertex/3/input_ports = "0,1,input0;"
nodes/vertex/3/output_ports = ""
nodes/vertex/3/expression = "normal = input0;"
nodes/vertex/4/node = SubResource( 41 )
nodes/vertex/4/position = Vector2( -520, 320 )
nodes/vertex/connections = PoolIntArray( 4, 0, 3, 0 )
nodes/fragment/0/position = Vector2( 2320, 640 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( -800, 420 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( -540, 280 )
nodes/fragment/4/node = SubResource( 26 )
nodes/fragment/4/position = Vector2( -1000, 360 )
nodes/fragment/7/node = SubResource( 36 )
nodes/fragment/7/position = Vector2( -320, 180 )
nodes/fragment/8/node = SubResource( 37 )
nodes/fragment/8/position = Vector2( -540, 120 )
nodes/fragment/9/node = SubResource( 38 )
nodes/fragment/9/position = Vector2( 1460, 500 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -420, 680 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 140, 400 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -20, 840 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( 140, 540 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( -340, 420 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( -400, 580 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( 448, 673 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( 460, 520 )
nodes/fragment/22/node = SubResource( 10 )
nodes/fragment/22/position = Vector2( 280, 960 )
nodes/fragment/23/node = SubResource( 11 )
nodes/fragment/23/position = Vector2( 1020, 740 )
nodes/fragment/24/node = SubResource( 12 )
nodes/fragment/24/position = Vector2( 529, 1001 )
nodes/fragment/25/node = SubResource( 13 )
nodes/fragment/25/position = Vector2( 740, 860 )
nodes/fragment/26/node = SubResource( 14 )
nodes/fragment/26/position = Vector2( 1229, 893 )
nodes/fragment/27/node = SubResource( 15 )
nodes/fragment/27/position = Vector2( 280, 1560 )
nodes/fragment/28/node = SubResource( 16 )
nodes/fragment/28/position = Vector2( 680, 1360 )
nodes/fragment/29/node = SubResource( 17 )
nodes/fragment/29/position = Vector2( 460, 1260 )
nodes/fragment/30/node = SubResource( 19 )
nodes/fragment/30/position = Vector2( 200, 1300 )
nodes/fragment/31/node = SubResource( 20 )
nodes/fragment/31/position = Vector2( 200, 1400 )
nodes/fragment/32/node = SubResource( 21 )
nodes/fragment/32/position = Vector2( 986, 1220 )
nodes/fragment/33/node = SubResource( 22 )
nodes/fragment/33/position = Vector2( 700, 1160 )
nodes/fragment/37/node = SubResource( 23 )
nodes/fragment/37/position = Vector2( -580, 920 )
nodes/fragment/38/node = SubResource( 24 )
nodes/fragment/38/position = Vector2( -140, 600 )
nodes/fragment/39/node = SubResource( 25 )
nodes/fragment/39/position = Vector2( 260, 1100 )
nodes/fragment/40/node = SubResource( 27 )
nodes/fragment/40/position = Vector2( 1660, 880 )
nodes/fragment/41/node = SubResource( 28 )
nodes/fragment/41/position = Vector2( 1400, 980 )
nodes/fragment/42/node = SubResource( 29 )
nodes/fragment/42/position = Vector2( 1900, 580 )
nodes/fragment/44/node = SubResource( 30 )
nodes/fragment/44/position = Vector2( 1640, 640 )
nodes/fragment/45/node = SubResource( 31 )
nodes/fragment/45/position = Vector2( -1080, 700 )
nodes/fragment/46/node = SubResource( 32 )
nodes/fragment/46/position = Vector2( -840, 840 )
nodes/fragment/47/node = SubResource( 33 )
nodes/fragment/47/position = Vector2( -280, 900 )
nodes/fragment/48/node = SubResource( 34 )
nodes/fragment/48/position = Vector2( 2100, 720 )
nodes/fragment/49/node = SubResource( 35 )
nodes/fragment/49/position = Vector2( 2100, 860 )
nodes/fragment/connections = PoolIntArray( 2, 2, 3, 2, 4, 0, 3, 0, 3, 0, 7, 1, 8, 0, 7, 0, 7, 0, 9, 0, 4, 0, 2, 0, 10, 0, 13, 0, 13, 0, 14, 2, 15, 0, 14, 0, 14, 0, 17, 0, 14, 0, 18, 1, 11, 0, 18, 0, 18, 0, 23, 0, 22, 0, 24, 0, 17, 0, 25, 0, 24, 0, 25, 1, 25, 0, 23, 1, 23, 0, 26, 0, 26, 0, 9, 1, 27, 0, 28, 2, 29, 0, 28, 1, 30, 0, 29, 0, 31, 0, 29, 1, 31, 0, 28, 0, 32, 0, 26, 1, 28, 0, 32, 1, 33, 0, 32, 0, 15, 0, 38, 0, 16, 0, 38, 1, 38, 0, 14, 1, 39, 0, 24, 1, 7, 0, 40, 0, 26, 0, 40, 1, 41, 0, 40, 2, 9, 0, 42, 0, 2, 2, 44, 2, 44, 0, 42, 1, 42, 0, 0, 0, 45, 2, 46, 2, 47, 0, 13, 1, 48, 0, 0, 2, 49, 0, 0, 3 )
nodes/light/0/position = Vector2( 1080, -460 )
